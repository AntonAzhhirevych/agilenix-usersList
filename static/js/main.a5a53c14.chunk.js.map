{"version":3,"sources":["components/UserListItem/UserListItem.js","components/UserList/UserList.js","redux/userList/userListSelectors.js","redux/userList/userListTypes.js","components/Loader/Loader.js","components/Error/ErrorNotification.js","containers/UserListContainer/UserListContainer.js","redux/userList/userListOperatons.js","redux/userList/userListAction.js","components/App.js","redux/store.js","redux/userList/userListReducer.js","index.js"],"names":["LocationIcon","styled","LocationOn","GeneralInfo","div","ItemText","Item","li","ItemImg","img","Text","p","Link","a","Location","span","UserListItem","item","src","avatar_url","href","html_url","target","login","name","bio","location","UserList","items","map","key","id","users","state","loading","error","types","GET_USERS_START","GET_USERS_SUCCESS","GET_USERS_ERROR","LoaderContainer","LoaderItem","Loader","type","color","height","width","ErrorContainer","h1","ErrorNotification","UserListContainer","getUserList","this","props","userList","loader","errorMessage","Component","mapDispatchToProps","dispatch","axios","get","then","data","user","loginUsers","Promise","all","result","r","payload","catch","action","connect","App","rootReducer","combineReducers","message","store","createStore","composeWithDevTools","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5a53c14.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { LocationOn } from 'styled-icons/material';\n\nconst UserListItem = ({ item }) => (\n  <Item>\n    <ItemImg src={item.avatar_url} />\n    <ItemText>\n      <GeneralInfo>\n        <Text>\n          <Link href={item.html_url} target=\"_blank\">\n            {item.login}\n          </Link>\n        </Text>\n        <Text>{item.name}</Text>\n      </GeneralInfo>\n      <Text>{item.bio}</Text>\n      <Location>\n        <LocationIcon />\n        {item.location}\n      </Location>\n    </ItemText>\n  </Item>\n);\n\nUserListItem.propTypes = {\n  item: PropTypes.shape({\n    avatar_url: PropTypes.string.isRequired,\n    html_url: PropTypes.string.isRequired,\n    login: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    bio: PropTypes.string,\n    location: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nconst LocationIcon = styled(LocationOn)`\n  color: #4d4d4d;\n  width: 15px;\n  height: 15px;\n  margin-left: -3px;\n`;\n\nconst GeneralInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst ItemText = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 90%;\n  color: #4d4d4d;\n`;\n\nconst Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  width: 600px;\n  height: 90px;\n  list-style: none;\n  border-bottom: 1px solid silver;\n  margin-bottom: 10px;\n`;\n\nconst ItemImg = styled.img`\n  width: 50px;\n  height: 50px;\n`;\n\nconst Text = styled.p`\n  padding: 0;\n  margin: 0;\n  font-size: 14px;\n  text-decoration: none;\n  margin-bottom: 5px;\n`;\n\nconst Link = styled.a`\n  text-decoration: none;\n  margin-right: 10px;\n`;\n\nconst Location = styled.span`\n  color: #4d4d4d;\n  font-size: 12px;\n`;\n\nexport default UserListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport UserListItem from '../UserListItem/UserListItem';\n\nconst UserList = ({ items }) => (\n  <ul>\n    {items.map(item => (\n      <UserListItem key={item.id} item={item} />\n    ))}\n  </ul>\n);\n\nUserList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar_url: PropTypes.string.isRequired,\n      html_url: PropTypes.string.isRequired,\n      login: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      bio: PropTypes.string,\n      location: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default UserList;\n","export const users = state => state.users;\nexport const loading = state => state.loading;\nexport const error = state => state.error;\n","const types = {\n  GET_USERS_START: 'GET_USERS_START',\n  GET_USERS_SUCCESS: 'GET_USERS_SUCCESS',\n  GET_USERS_ERROR: 'GET_USERS_ERROR',\n};\n\nexport default types;\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport ThreeDots from 'react-loader-spinner';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Loader = () => (\n  <LoaderContainer>\n    <LoaderItem>\n      <ThreeDots type=\"ThreeDots\" color=\"black\" height={100} width={100} />\n    </LoaderItem>\n  </LoaderContainer>\n);\n\nconst LoaderContainer = styled.div`\n  display: flex;\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst LoaderItem = styled.div`\n  margin: auto;\n`;\n\nexport default Loader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst ErrorNotification = ({ error }) => (\n  <ErrorContainer>\n    <Text>Oh, something went wrong: {error}</Text>\n  </ErrorContainer>\n);\n\nErrorNotification.propTypes = {\n  error: PropTypes.string.isRequired,\n};\n\nconst ErrorContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n`;\n\nconst Text = styled.h1`\n  margin: auto;\n  color: #bd0000;\n`;\n\nexport default ErrorNotification;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport UserList from '../../components/UserList/UserList';\nimport { users, loading, error } from '../../redux/userList/userListSelectors';\nimport { getUsers } from '../../redux/userList/userListOperatons';\nimport Loader from '../../components/Loader/Loader';\nimport ErrorNotification from '../../components/Error/ErrorNotification';\n\nclass UserListContainer extends Component {\n  componentDidMount() {\n    const { getUserList } = this.props;\n    getUserList();\n  }\n\n  render() {\n    const { userList, loader, errorMessage } = this.props;\n\n    return (\n      <div>\n        <UserList items={userList} />\n        {loader && <Loader />}\n        {errorMessage && <ErrorNotification error={errorMessage} />}\n      </div>\n    );\n  }\n}\n\nUserListContainer.propTypes = {\n  getUserList: PropTypes.func.isRequired,\n  loader: PropTypes.bool.isRequired,\n  errorMessage: PropTypes.string.isRequired,\n  userList: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar_url: PropTypes.string.isRequired,\n      html_url: PropTypes.string.isRequired,\n      login: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      bio: PropTypes.string,\n      location: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nconst mapStateToProps = state => ({\n  userList: users(state),\n  loader: loading(state),\n  errorMessage: error(state),\n});\n\nconst mapDispatchToProps = {\n  getUserList: getUsers,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(UserListContainer);\n","import axios from 'axios';\nimport * as action from './userListAction';\n\n/* eslint-disable-next-line */\nexport const getUsers = () => dispatch => {\n  dispatch(action.getUserStart());\n  axios\n    .get('https://api.github.com/search/users?q=location:kyiv&per_page=10')\n    .then(users => users.data.items.map(user => user.login))\n    .then(loginUsers =>\n      Promise.all(\n        loginUsers.map(login =>\n          axios.get(`https://api.github.com/users/${login}`),\n        ),\n      ),\n    )\n    .then(result => result.map(r => r.data))\n    .then(user => dispatch(action.getUserSuccess(user)))\n    .catch(error => dispatch(action.getUserError(error)));\n};\n","import types from './userListTypes';\n\nexport const getUserStart = () => ({\n  type: types.GET_USERS_START,\n});\n\nexport const getUserSuccess = users => ({\n  type: types.GET_USERS_SUCCESS,\n  payload: users,\n});\n\nexport const getUserError = error => ({\n  type: types.GET_USERS_ERROR,\n  payload: error,\n});\n","import React from 'react';\nimport UserList from '../containers/UserListContainer/UserListContainer';\n\nconst App = () => <UserList />;\n\nexport default App;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reduxThunk from 'redux-thunk';\nimport {\n  userReducer,\n  loadingReducer,\n  errorReducer,\n} from './userList/userListReducer';\n\nconst rootReducer = combineReducers({\n  users: userReducer,\n  loading: loadingReducer,\n  error: errorReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(reduxThunk)),\n);\n\nexport default store;\n","import types from './userListTypes';\n\nexport const userReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case types.GET_USERS_SUCCESS:\n      return payload;\n    default:\n      return state;\n  }\n};\n\nexport const loadingReducer = (state = false, { type }) => {\n  switch (type) {\n    case types.GET_USERS_START:\n      return true;\n    case types.GET_USERS_SUCCESS:\n    case types.GET_USERS_ERROR:\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nexport const errorReducer = (state = '', { type, payload }) => {\n  switch (type) {\n    case types.GET_USERS_ERROR:\n      return payload.message;\n\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}